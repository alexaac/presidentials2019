{"version":3,"file":"bundle.js","sources":["../src/Config.js","../src/Utils.js","../src/Stats.js","../src/MapFactory.js","../src/DrawLegend.js","../src/DrawMaps.js","../node_modules/svelte/internal/index.mjs","../src/App.svelte","../src/main.js"],"sourcesContent":["// field meaning for the elections data\nexport const COL_LEGEND = {\n    'a': 'Numărul total al alegătorilor prevăzut în lista electorală permanentă existentă în secția de votare',\n    'b': 'Numărul total al alegătorilor care s-au prezentat la urne',\n    'b1': 'Numărul total al alegătorilor care s-au prezentat la urne, înscriși în lista electorală permanentă',\n    'b2': 'Numărul total al alegătorilor care s-au prezentat la urne și nu sunt cuprinși în lista electorală permanentă, înscriși în lista electorală suplimentară',\n    'b3': 'Numărul total al alegătorilor care au votat utilizând urna specială, înscriși în extrasul din listele electorale',\n    'c': 'Numărul total al voturilor valabil exprimate',\n    'd': 'Numărul voturilor nule',\n    'e': 'Numărul buletinelor de vot primite',\n    'f': 'Numărul buletinelor de vot neîntrebuințate și anulate'\n};\n\n// field meaning for votes for each candidate, round 1\nexport const CANDIDATES_2019 = {\n    'g1': { name: 'KLAUS-WERNER IOHANNIS', color: '#2171b5' },\n    'g2': { name: 'THEODOR PALEOLOGU', color: '#7fc6bc' },\n    'g3': { name: 'ILIE-DAN BARNA', color: '#22ace4' },\n    'g4': { name: 'HUNOR KELEMEN', color: '#aac52e' },\n    'g5': { name: 'VASILICA-VIORICA DĂNCILĂ', color: '#fa8376' },\n    'g6': { name: 'CĂTĂLIN-SORIN IVAN', color: '#4182e4' },\n    'g7': { name: 'NINEL PEIA', color: '#2a5c70' },\n    'g8': { name: 'SEBASTIAN-CONSTANTIN POPESCU', color: '#18533d' },\n    'g9': { name: 'JOHN-ION BANU', color: '#345f4f' },\n    'g10': { name: 'MIRCEA DIACONU', color: '#9379da' },\n    'g11': { name: 'BOGDAN-DRAGOS-AURELIU MARIAN-STANOEVICI', color: '#bde67c' },\n    'g12': { name: 'RAMONA-IOANA BRUYNSEELS', color: '#bf7ce6' },\n    'g13': { name: 'VIOREL CATARAMĂ', color: '#7a344b' },\n    'g14': { name: 'ALEXANDRU CUMPĂNAŞU', color: '#888622' },\n};\n\n// field meaning for votes for each candidate, round 2\nexport const CANDIDATES_2019_2 = {\n    'g1': { name: 'KLAUS-WERNER IOHANNIS', color: '#2171b5' },\n    'g2': { name: 'VASILICA-VIORICA DĂNCILĂ', color: '#fa8376' },\n};\n\nexport const CANDIDATES_2014 = {};\n\n// the list of geographic data layers - same data, different shapes\nexport const LAYERLIST = [\n    'counties_wgs84',                 // counties with district id data\n    'counties_cart_wgs84',            // same counties as cartogram\n    'counties_cart_hex_10000_wgs84',  // hexagons from the cartogram\n    'counties_cart_hex_10000d_wgs84'  // dissolved hexagons by county\n];\n\nexport const width = 620,\n    height = 660;\n\nexport const viewport_width = 740,\n    viewport_height = 680;\n\n//color scales showing which candidate had the most influence per county\nexport const colorScaleRed = d3.scaleThreshold()\n    .domain( [0, 10, 20, 30, 40, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100 ] )\n    .range(d3.schemeReds[9]);\n\nexport const colorScaleBlue = d3.scaleThreshold()\n    .domain( [0, 10, 20, 30, 40, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100 ] )\n    .range(d3.schemeBlues[9]);\n\nexport const colorScaleRed2 = d3.scaleQuantize()\n    .domain( [ 0, 100 ] )\n    .range(d3.schemeReds[9]);\n\nexport const colorScaleBlue2 = d3.scaleQuantize()\n    .domain( [ 0, 100 ] )\n    .range(d3.schemeBlues[9]);\n\nexport const projection = d3.geoAlbers()\n    .center([24.7731, 45.7909])\n    .rotate([-14, 3.3, -10])\n    .parallels([37, 54])\n    .scale(5000);\n\nexport const path = d3.geoPath()\n    .projection(projection);\n\nexport const roundToNearestMultipleOf = m => n => Math.ceil(Math.round(n/m)*m);\n\n/* normalize the elections data fields for both rounds, and 2014 elections\n   and group them by district code */\nexport const fieldMap = (d) => {\n\n    return {\n        code: {\n            '2014': d['Cod Birou Electoral'],\n            '2019-11-10': d['Cod birou electoral'],\n            '2019-11-24': d['Cod birou electoral'],\n        },\n        totValidVotes: {\n            '2014': d['Numărul total al voturilor valabil exprimate'],\n            '2019-11-10': d['c'],\n            '2019-11-24': d['c'],\n        },\n        vote1: {\n            '2014': d['VICTOR-VIOREL PONTA'],\n            '2019-11-10': d['g5'],\n            '2019-11-24': d['g2'],\n        },\n        candidate1: {\n            '2014': CANDIDATES_2014['g5'],\n            '2019-11-10': CANDIDATES_2019['g5'].name,\n            '2019-11-24': CANDIDATES_2019_2['g2'].name,\n        },\n        vote2: {\n            '2014': d['KLAUS-WERNER IOHANNIS'],\n            '2019-11-10': d['g1'],\n            '2019-11-24': d['g1'],\n        },\n        candidate2: {\n            '2014': CANDIDATES_2014['g1'],\n            '2019-11-10': CANDIDATES_2019['g1'].name,\n            '2019-11-24': CANDIDATES_2019_2['g1'].name,\n        },\n        electoralDistrict: {\n            '2014': d['Nume Judet'],\n            '2019-11-10': d['Județ'],\n            '2019-11-24': d['Județ'],\n        },\n        rate1: {\n            '2014': d['VICTOR-VIOREL PONTA'] / d['Numărul total al voturilor valabil exprimate'] * 100,\n            '2019-11-10': d.g5 / d.c * 100,\n            '2019-11-24': d.g2 / d.c * 100,\n        },\n        rate1Color: {\n            '2014': roundToNearestMultipleOf(5)(d['VICTOR-VIOREL PONTA'] / d['Numărul total al voturilor valabil exprimate'] * 100),\n            '2019-11-10': roundToNearestMultipleOf(5)(d.g5 / d.c * 100),\n            '2019-11-24': roundToNearestMultipleOf(5)(d.g2 / d.c * 100),\n        },\n        rate2: {\n            '2014': d['KLAUS-WERNER IOHANNIS'] / d['Numărul total al voturilor valabil exprimate'] * 100,\n            '2019-11-10': d.g1 / d.c * 100,\n            '2019-11-24': d.g1 / d.c * 100,\n        },\n        rate2Color: {\n            '2014': roundToNearestMultipleOf(5)(d['KLAUS-WERNER IOHANNIS'] / d['Numărul total al voturilor valabil exprimate'] * 100),\n            '2019-11-10': roundToNearestMultipleOf(5)(d.g1 / d.c * 100),\n            '2019-11-24': roundToNearestMultipleOf(5)(d.g1 / d.c * 100),\n        }\n    }\n}","import * as Config from './Config.js'\n\nexport const pair = (array) => {\n    return array.slice(1).map( (b, i) => {\n        return [array[i], b];\n    });\n}\n\n/* apply the color scales showing which candidate had the most influence\n   per county, to every chart, map and legend */\nexport const colorLayers = (d) => {\n    return ( d.properties.joined.rate1 > d.properties.joined.rate2 ) \n                ? ( d.properties.joined.electionsDate === \"2019-11-10\")\n                    ? Config.colorScaleRed(d.properties.joined.rate1)\n                    : Config.colorScaleRed2(d.properties.joined.rate1)\n                : ( d.properties.joined.electionsDate === \"2019-11-10\")\n                    ? Config.colorScaleBlue(d.properties.joined.rate2)\n                    : Config.colorScaleBlue2(d.properties.joined.rate2);\n};\n\n// use a tooltip to show info per county, simultaneous in all charts\nexport const tooltip_div = d3.select(\"body\")\n    .append(\"tooltip_div\") \n    .attr(\"class\", \"tooltip\")       \n    .style(\"opacity\", 0);\n\nexport const highlight = (d) => {\n    tooltip_div.transition()    \n        .duration(200)    \n        .style(\"opacity\", .9);    \n    tooltip_div.html(tooltipHTML(d))\n        .style(\"left\", (d3.event.pageX) + \"px\")\n        .style(\"top\", (d3.event.pageY - 28) + \"px\");\n    d3.selectAll(\".CO-\" + d.properties.joined.code)\n        .attr(\"style\", \"stroke: #00ffff; stroke-Config.viewport_width: 2px; fill-opacity: 0.8; cursor: pointer;\");\n};\n\nexport const tooltipHTML = (d) => {\n    return d.properties.joined.candidate2 + \" votes: \" + d3.format(\".2f\")(d.properties.joined.rate2) + \"% </br>\" +\n        d.properties.joined.candidate1 + \" votes: \" + d3.format(\".2f\")(d.properties.joined.rate1) + \"% </br>\" +\n        \"Electoral district: \" + d.properties.joined.electoralDistrict + \"</br>\" +\n        \"Total valid votes: \" + d.properties.joined.totValidVotes.toLocaleString() + \"</br>\" +\n        ( (d.properties.cod_birou !== 48) ? \"Valid votes / km²: \" + d.properties.joined.vvot_sqkm + \"</br>\" : \"\");\n};\n\nexport const unHighlight = (d) => {\n    tooltip_div.transition()    \n        .duration(500)    \n        .style(\"opacity\", 0);\n    d3.selectAll(\".CO-\" + d.properties.joined.code)\n        .attr(\"style\", \"stroke: none; cursor: none;\");\n}\n\n// completely swipe out the previous view\nexport const repaint = () => {\n    d3.select(\"#legend-percent\").selectAll(\"*\").remove();\n    d3.select(\"#legend-population\").selectAll(\"*\").remove();\n    d3.select(\"#geography\").selectAll(\"*\").remove();\n    d3.select(\"#gastner-c-cartogram\").selectAll(\"*\").remove();\n    d3.select(\"#gastner-g-cartogram\").selectAll(\"*\").remove();\n    d3.select(\"#dorling-cartogram\").selectAll(\"*\").remove();\n    d3.select(\"#demers-cartogram\").selectAll(\"*\").remove();\n    d3.select(\"#noncont-cartogram\").selectAll(\"*\").remove();\n    d3.select(\"#candidates-donut\").selectAll(\"*\").remove();\n    d3.select(\"#counties-treemap\").selectAll(\"*\").remove();\n\n    const svg1 = d3.select(\"#legend-percent\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + 150);\n    const svg2 = d3.select(\"#legend-population\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-20 20 \" + Config.width + \" \" + Config.height);\n    const svg3 = d3.select(\"#geography\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg4 = d3.select(\"#gastner-c-cartogram\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg5 = d3.select(\"#gastner-g-cartogram\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg6 = d3.select(\"#dorling-cartogram\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg7 = d3.select(\"#demers-cartogram\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg8 = d3.select(\"#noncont-cartogram\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"-60 60 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg9 = d3.select(\"#candidates-donut\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"0 0 \" + Config.viewport_width + \" \" + Config.viewport_height);\n    const svg10 = d3.select(\"#counties-treemap\").append(\"svg\").attr(\"class\", \"chart-group\").attr(\"preserveAspectRatio\", \"xMidYMid\").attr(\"viewBox\", \"0 0 \" + Config.width + \" \" + Config.height);\n\n    return [svg1, svg2, svg3, svg4, svg5, svg6, svg7, svg8, svg9, svg10];\n}\n\n// remap fields for abroad data to match local data\nexport const reMapFields = (data) => {\n    data.forEach( d => {\n        d.c = d.d1;\n        d.g1 = d.e1;\n        d.g2 = d.e2;\n        d.g3 = d.e3;\n        d.g4 = d.e4;\n        d.g5 = d.e5;\n        d.g6 = d.e6;\n        d.g7 = d.e7;\n        d.g8 = d.e8;\n        d.g9 = d.e9;\n        d.g10 = d.e10;\n        d.g11 = d.e11;\n        d.g12 = d.e12;\n        d.g13 = d.e13;\n        d.g14 = d.e14;\n    });\n\n    return data;\n}","import * as Config from './Config.js'\n\n// group the elections data by counties\nexport const groupvotesByCounties = (data) => {\n\n    let resultByCounty = [];\n    data.reduce( (res, data_row) => {\n        /* aggregate by district code, keep the columns representing total votes\n           and the votes per candidate, add district code and county name */\n        const columns = ['c', 'g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7', 'g8', 'g9', 'g10', 'g11', 'g12', 'g13', 'g14'];\n        const district_code = data_row['Cod birou electoral'];\n\n        if (!res[district_code]) {\n            res[district_code] = {\n               'Cod birou electoral': district_code,\n               'Județ': data_row['Județ']\n            };\n            columns.forEach( col => {\n                res[district_code][col] = 0;\n            });\n\n            resultByCounty.push(res[district_code]);\n        };\n\n        // make the total per county\n        columns.forEach( col => {\n            res[district_code][col] += Number(data_row[col]);\n        });\n\n        return res;\n    }, {});\n\n    return resultByCounty;\n}\n\n// group the elections data by candidates\nexport const groupVotesByCandidates = (resultByCounty, electionsDate) => {\n    /* aggregate by candidate name per county, then summarize for each\n       candidate and calculate the percentage per total */\n    const resultByCandidates = [];\n    let columns = [];\n\n    if (electionsDate === \"2019-11-10\") {\n        columns = ['g1', 'g2', 'g3', 'g4', 'g5', 'g6', 'g7', 'g8', 'g9', 'g10', 'g11', 'g12', 'g13', 'g14'];\n    } else {\n        columns = ['g1', 'g2'];\n    };\n\n    columns.forEach( col => {\n        const result = resultByCounty.reduce( (res, data_row) => {\n            if (!res[data_row[col]]) {\n                res[data_row['Județ']] = data_row[col];\n            };\n\n            return res;\n        }, {});\n\n        const keys = Object.keys(result);\n        const votes = keys.map( v =>  result[v] );\n        const total = votes.reduce((a, b) => a + b, 0);\n        result.total = total || 0;\n        result.candidateId = col;\n\n        const candidateName = (electionsDate === \"2019-11-10\") ? Config.CANDIDATES_2019[col].name : Config.CANDIDATES_2019_2[col].name;\n        resultByCandidates[candidateName] = result;\n    });\n\n    let keys = Object.keys(resultByCandidates);\n\n    let totCountry = 0;\n    keys.forEach( k => totCountry += resultByCandidates[k].total || 0);\n    keys.forEach( k => {\n        resultByCandidates[k].totalCountry = totCountry;\n        resultByCandidates[k].rateCountry = ((resultByCandidates[k].total/totCountry) * 100).toFixed(3);\n    });\n\n    return resultByCandidates;\n};\n\n/* normalize the elections data fields for both rounds\n   and group them by district code; geographic data is at county level,\n   we must aggregate elections data from precinct level to county level */\nexport const groupElectoralDataByDistrict = (data, electionsDate) => {\n    let electoralDataByDistrict = d3.map();\n    data.forEach( d => {\n        let fieldMap = Config.fieldMap(d);\n        electoralDataByDistrict.set(fieldMap.code[electionsDate], {\n            code: fieldMap.code[electionsDate],\n            totValidVotes: fieldMap.totValidVotes[electionsDate],\n            vote1: fieldMap.vote1[electionsDate],\n            candidate1: fieldMap.candidate1[electionsDate],\n            vote2: fieldMap.vote2[electionsDate],\n            candidate2: fieldMap.candidate2[electionsDate],\n            electoralDistrict: fieldMap.electoralDistrict[electionsDate],\n            rate1: fieldMap.rate1[electionsDate],\n            rate1Color: fieldMap.rate1Color[electionsDate],\n            rate2: fieldMap.rate2[electionsDate],\n            rate2Color: fieldMap.rate2Color[electionsDate],\n        });\n    });\n\n    return electoralDataByDistrict;\n}","import * as Config from './Config.js'\nimport * as Stats from './Stats.js'\n\n// join the geographic data with the elections data and keep specific fields\nconst formatCountyData = (data, votesByCounties, electionsDate) => {\n\n    // normalize the elections data fields for both rounds\n    const electoralDataByDistrict = Stats.groupElectoralDataByDistrict(votesByCounties, electionsDate);\n\n    /* get the list of geographic data layers - same data, different shapes,\n       and make the join with the elections data using district code */\n    Config.LAYERLIST.forEach( layer => {\n        // take the geometries from topojson\n        data.objects[layer].geometries = data.objects[layer].geometries\n        .filter( d => { \n            return d;\n        });\n        /* put the elections data grouped by district code in 'joined' attribute,\n           then add district code, votes per square kilometer and elections date */\n        data.objects[layer].geometries\n        .forEach( d => {\n            if  (typeof(electoralDataByDistrict.get(d.properties.cod_birou)) === \"undefined\" ) {\n                d.properties.joined = {\n                    code: d.cod_birou,\n                    candidate1: \"\",\n                    candidate2: \"\",\n                    districtAbbr: \"\",\n                    electoralDistrict: \"\",\n                    rate1: 0,\n                    rate1Color: 0,\n                    rate2: 0,\n                    rate2Color: 0,\n                    totValidVotes: 0,\n                    totValidVotes_rate: 0,\n                    vote1: 0,\n                    vote2: 0,\n                    vvot_sqkm: 0,\n                    electionsDate: electionsDate,\n                };\n            } else {\n                try {\n                    d.properties.joined = electoralDataByDistrict.get(d.properties.cod_birou);\n                    d.properties.joined.code = d.properties.cod_birou;\n                    d.properties.joined.districtAbbr = d.properties.abbr;\n                    d.properties.joined.vvot_sqkm = Math.ceil(d.properties.joined.totValidVotes / d.properties.area_sqkm);\n                    d.properties.joined.electionsDate = electionsDate;\n\n                    return d;\n                } catch (error) {\n                    console.log(error);\n                };\n            }\n        });\n    });\n\n    return data;\n}\n\n/* create a function that takes as input the geographic and elections\n           data and date, formats the data, then draw the legend, maps and\n           charts using the same shared data: formattedData, votesByCounties,\n           votesByCandidates, electionsDate */\n\nconst mapDataFactory = (data, electionsData, electionsDate) => {\n\n    // group the elections data by counties and by candidates\n    const votesByCounties = Stats.groupvotesByCounties(electionsData),\n        votesByCandidates = Stats.groupVotesByCandidates(votesByCounties, electionsDate);\n\n    /* join the geographic data with the elections data and keep specific fields;\n       geographic data is at county level, we must aggregate elections data from\n       precinct level to county level first */\n    const formattedData = formatCountyData(data, votesByCounties, electionsDate);\n\n    // put all data in a vehicle, for sharing and reuse\n    const votesStats = {\n        formattedData: formattedData,\n        votesByCounties: votesByCounties,\n        votesByCandidates: votesByCandidates,\n        electionsDate: electionsDate\n    };\n\n    /* allow calling the function with a function as parameter\n       and pass the data in the vehicle */\n    return (callback, layer, svg) => {\n        return callback(votesStats, layer, svg);\n    }\n};\n\nexport default mapDataFactory;","import * as Utils from './Utils.js'\nimport * as Config from './Config.js'\n\n// draw a scalebar in miles and km, use geographic data to set extent\nexport const drawScaleBar = (votesStats, layer, svg) => {\n    //https://bl.ocks.org/HarryStevens/8c8d3a489aa1372e14b8084f94b32464\n\n    let data = votesStats.formattedData;\n\n    data = topojson.feature(data, {\n        type: \"GeometryCollection\",\n        geometries: data.objects[layer].geometries\n    });\n\n    const g = svg.append(\"g\");\n    const projection = Config.projection;\n    \n    const miles = d3.geoScaleBar()\n      .units(\"miles\")\n      .left(.45);\n    const scaleBarMiles = g.append(\"g\")\n        .attr(\"transform\",  `translate(${-110},${Config.height})`);\n\n    const kilometers = d3.geoScaleBar()\n      .left(.45)\n      .distance(100);\n\n    const scaleBarKilometers = g.append(\"g\")\n      .attr(\"transform\",  `translate(${-110},${Config.height + 40})`);\n      const redraw = () => {\n        projection.fitSize([Config.width, Config.height], data);\n        miles.fitSize([Config.width, Config.height], data).projection(projection);\n        scaleBarMiles.call(miles);\n        kilometers.fitSize([Config.width, Config.height], data).projection(projection);\n        scaleBarKilometers.call(kilometers);\n    };\n\n    redraw();\n    window.onresize = _ => redraw();\n\n};\n\n// draw a legend based on the percentage of votes per the final candidates\nexport const drawVotesPercentageLegend = (votesStats, layer, svg) => {\n\n    const data = votesStats.formattedData;\n    const electionsDate = votesStats.electionsDate;\n    const votesByCandidates = votesStats.votesByCandidates;\n\n    let layerData = topojson.feature(data, data.objects[layer]).features;\n\n    const keys = Object.keys(layerData);\n    const values = keys.map( v => layerData[v] );\n\n    const minRate1 = values.reduce(( (a, b) => (a.properties.joined.rate1Color < b.properties.joined.rate1Color) ? a : b ), values[0]);\n    const maxRate1 = values.reduce(( (a, b) => (a.properties.joined.rate1Color > b.properties.joined.rate1Color) ? a : b ), values[0]);\n    const minRate2 = values.reduce(( (a, b) => (a.properties.joined.rate2Color < b.properties.joined.rate2Color) ? a : b ), values[0]);\n    const maxRate2 = values.reduce(( (a, b) => (a.properties.joined.rate2Color > b.properties.joined.rate2Color) ? a : b ), values[0]);\n    \n    const g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(290, 80)\");\n    const g1 = svg.append(\"g\")\n        .attr(\"transform\", \"translate(0, 80)\");\n\n    const x = d3.scaleLinear()\n        .domain([minRate1.properties.joined.rate1Color, maxRate1.properties.joined.rate1Color])\n        .rangeRound([10, 300]);\n    const x1 = d3.scaleLinear()\n        .domain([maxRate2.properties.joined.rate2Color, minRate2.properties.joined.rate2Color])\n        .rangeRound([10, 300]);\n\n    g.selectAll(\"rect\")\n    .data(Utils.pair(x.ticks(10)))\n    .enter().append(\"rect\")\n        .attr(\"height\", 20)\n        .attr(\"x\", d => x(d[0]) )\n        .attr(\"width\", d => x(d[1]) - x(d[0]) )\n        .style(\"fill\", d => electionsDate === \"2019-11-10\" ? Config.colorScaleRed(d[0]) : Config.colorScaleRed2(d[0]) );\n    g1.selectAll(\"rect\")\n        .data(Utils.pair(x1.ticks(10)))\n        .enter().append(\"rect\")\n            .attr(\"height\", 20)\n            .attr(\"x\", d => x1(d[0]) )\n            .attr(\"width\", d => x1(d[1]) - x1(d[0]) )\n            .style(\"fill\", d => Config.colorScaleBlue(d[0]) );\n\n    const xAxisCall = d3.axisBottom(x)\n        .ticks(3).tickSize(30);\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisCall);\n    const xAxisCall1 = d3.axisBottom(x1)\n        .ticks(3).tickSize(30);\n    g1.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .call(xAxisCall1);\n\n    const candidate1Text =  ( typeof(maxRate1.properties.joined.code) !== \"undefined\" )\n        ? `${maxRate1.properties.joined.candidate1} (${d3.format(\",.2f\")(votesByCandidates[maxRate1.properties.joined.candidate1].rateCountry)} %)`\n        : \"\";\n    const candidate2Text = ( typeof(maxRate1.properties.joined.code) !== \"undefined\" )\n        ? `${maxRate2.properties.joined.candidate2} (${d3.format(\",.2f\")(votesByCandidates[maxRate2.properties.joined.candidate2].rateCountry)} %)`\n        : \"\";\n    const totalCandidate1Text = ( typeof(maxRate1.properties.joined.code) !== \"undefined\" )\n        ? `${maxRate2.properties.joined.candidate1} ${d3.format(\",.0f\")(votesByCandidates[maxRate2.properties.joined.candidate1].total)}`\n        : \"\";\n    const totalCandidate2Text = ( typeof(maxRate1.properties.joined.code) !== \"undefined\" )\n        ? `${maxRate2.properties.joined.candidate2} ${d3.format(\",.0f\")(votesByCandidates[maxRate2.properties.joined.candidate2].total)}`\n        : \"\";\n    const totalCountryText = ( typeof(maxRate1.properties.joined.code) !== \"undefined\" )\n        ? `TOTAL ${d3.format(\",.0f\")(votesByCandidates[maxRate2.properties.joined.candidate2].totalCountry)}`\n        : \"\";\n\n    g.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"x\", x.range()[0] + 30 )\n            .attr(\"y\", -6)\n            .attr(\"class\", \"bubble-label\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(`${candidate1Text}` );\n    g1.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"x\", x1.range()[0])\n            .attr(\"y\", -6)\n            .attr(\"class\", \"bubble-label\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(`${candidate2Text}` );\n    g1.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"x\", x1.range()[0])\n            .attr(\"y\", 86)\n            .attr(\"class\", \"bubble-label\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(`${totalCandidate2Text}` );\n    g1.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"x\", x1.range()[0])\n            .attr(\"y\", 106)\n            .attr(\"class\", \"bubble-label\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(`${totalCandidate1Text}` );\n    g1.append(\"text\")\n            .attr(\"class\", \"caption\")\n            .attr(\"x\", x1.range()[0])\n            .attr(\"y\", 126)\n            .attr(\"class\", \"bubble-label\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(`${totalCountryText}` );\n\n};\n\n// draw a legend based on the number of votes per county\nexport const drawVotesByPopulationLegend = (votesStats, layer, svg) => {\n    // http://www.ralphstraumann.ch/projects/swiss-population-cartogram/\n\n    const data = votesStats.formattedData;\n\n    let layerData = topojson.feature(data, data.objects[layer]).features;\n\n    const keys = Object.keys(layerData);\n    const values = keys.map( v => layerData[v] );\n    layerData = values.sort( (a, b) => b.properties.joined.totValidVotes - a.properties.joined.totValidVotes );\n\n    const margin = { left:5, right:5, top:10, bottom:15 };\n\n    const g = svg.append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    const x = d3.scaleLinear()\n        .domain([0, d3.max(layerData, d => d.properties.joined.totValidVotes )])\n        .range([0, 450]);\n\n    const y = d3.scaleBand()\n        .domain(layerData.map( d => d.properties.joined.districtAbbr ))\n        .rangeRound([78, Config.height])\n        .padding(0.1);\n\n    const xAxisCall = d3.axisTop(x)\n        .ticks(5).tickSize(5);\n    g.append(\"g\")\n        .attr(\"class\", \"x-axis\")\n        .attr(\"transform\", d => \"translate(55,70)\" )\n        .call(xAxisCall)\n        .selectAll(\"text\")\n            .attr(\"y\", \"-5\");\n\n    const yAxisCall = d3.axisLeft(y)\n        .ticks(10).tickSize(0)\n    g.append(\"g\")\n        .attr(\"class\", \"y-axis\")\n        .attr(\"transform\", d => \"translate(60,0)\" ) \n        .call(yAxisCall);\n\n    const bar = g.selectAll(\"g.bar\")\n        .data(layerData)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"bar\")\n        .attr(\"transform\", d => `translate(60,${y(d.properties.joined.districtAbbr)})` );\n    \n    bar.append(\"rect\")\n        .attr(\"width\", d => x(d.properties.joined.totValidVotes) )\n        .attr(\"height\", y.bandwidth())\n        .attr(\"class\", \"bar-county\")\n        .attr(\"class\", d => `CO-${d.properties.joined.code}` )\n        .attr(\"fill\", d => Utils.colorLayers(d))\n        .attr(\"d\", Config.path)\n        .on(\"mouseover\", d => Utils.highlight(d)) \n        .on(\"mouseout\", d => Utils.unHighlight(d));\n\n    bar.append(\"text\")\n        .attr(\"class\", \"value\")\n        .attr(\"x\", d => x(d.properties.joined.totValidVotes) )\n        .attr(\"y\", y.bandwidth() / 2)\n            .attr(\"dx\", +3)\n            .attr(\"dy\", \".35em\")\n            .attr(\"text-anchor\", \"begin\")\n            .text( d => d3.format(\",.0f\")(d.properties.joined.totValidVotes) );\n\n};\n\n// draw a treemap from the total votes per county\nexport const drawCountiesTreemap = (votesStats, layer, svg) => {\n    // https://bl.ocks.org/mbostock/4063582\n\n    const votesByCounties = votesStats.votesByCounties;\n\n    const nodes = topojson.feature(votesStats.formattedData, votesStats.formattedData.objects.counties_wgs84).features;\n\n    let populationData = [];\n    nodes.forEach( d => {\n        return populationData.push({\n            name: d.properties.joined.electoralDistrict,\n            value: d.properties.joined.totValidVotes,\n            properties: d.properties,\n        });\n    });\n\n    const data = {\n        \"name\": \"Districts\",\n        \"children\": populationData,\n    };\n\n    const format = d3.format(\",d\");\n\n    const treemap = data => d3.treemap()\n    .tile(d3.treemapResquarify)\n    .size([Config.width, Config.height])\n    .padding(1)\n    .round(true)\n        (d3.hierarchy(data)\n            .eachBefore( d => { d.data.id = (d.parent ? d.parent.data.id + \".\" : \"\") + d.data.name; })\n            .sum(d => d.value)\n            .sort((a, b) => b.value - a.value))\n\n    const root = treemap(data);\n\n    const leaf = svg.selectAll(\"g\")\n      .data(root.leaves())\n      .join(\"g\")\n        .attr(\"transform\", d => `translate(${d.x0},${d.y0})`);\n  \n    leaf.append(\"rect\")\n        .attr(\"id\", d => d.data.id)\n        .attr(\"class\", \"districts\")\n        .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return Utils.colorLayers(d.data); })\n        .attr(\"fill-opacity\", 0.6)\n        .attr(\"width\", d => d.x1 - d.x0)\n        .attr(\"height\", d => d.y1 - d.y0)\n        .on(\"mouseover\", function(d) {\n            Utils.tooltip_div.transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n            Utils.tooltip_div.html(`${d.ancestors().reverse().map(d => d.data.name).join(\"/\")}</br>${format(d.value)} votes`)\n                .style(\"left\", (d3.event.pageX) + \"px\")\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", function(d) {\n            Utils.tooltip_div.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n            });\n  \n    leaf.append(\"clipPath\")\n        .attr(\"id\", d => `clip-${d.data.id}`)\n        .append(\"use\")\n            .attr(\"xlink:href\", d => `#${d.data.id}`);\n  \n    leaf.append(\"text\")\n        .attr(\"font-size\", 10 + \"px\")\n        .attr(\"clip-path\", d => `url(#clip-${d.data.id})`)\n        .selectAll(\"tspan\")\n        .data(d => d.data.name.split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)))\n        .join(\"tspan\")\n            .attr(\"x\", 3)\n            .attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`)\n            .attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 0.7 : null)\n            .text(d => d);\n  \n};\n\n// draw a donut from the percentage of all candidates\nexport const drawCandidatesDonut = (votesStats, layer, svg) => {\n    // bl.ocks.org/nbremer/b603c3e0f7a74794da87/519786faa068384a3b9a08c45ba3a8f356b84407\n\n    const votesByCandidates = votesStats.votesByCandidates;\n    const radius = Math.min(Config.width, Config.height) / 2 - 40;\n\n    const keys = Object.keys(votesByCandidates);\n    let data = keys.map( v => { return {\n                candidateId: votesByCandidates[v].candidateId,\n                name: v,\n                value: votesByCandidates[v].total,\n                percent: votesByCandidates[v].rateCountry,\n        }\n    });\n    data = data.filter( d => d.value !== 0);\n\n    const g = svg.append(\"g\")\n        .attr(\"transform\", `translate(${Config.width / 2},${Config.height / 2})`);\n\n    const pie = d3.pie()\n        .sort(null)\n        .value( d => d.value );\n\n    const arc = d3.arc()\n        .outerRadius(radius * 0.5)\n        .innerRadius(radius * 0.8);\n    \n    const path = g.selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append(\"g\")\n        .on(\"mouseover\", function(d) {\n              let g = d3.select(this)\n                .append(\"g\")\n                .attr(\"class\", \"text-group\");\n              g.append(\"text\")\n                .attr(\"class\", \"name-text\")\n                .text(`${d.data.name}`)\n                .attr('text-anchor', 'middle')\n                .attr('dy', '-1.2em');\n          \n              g.append(\"text\")\n                .attr(\"class\", \"value-text\")\n                .text(`${d3.format(\",.0f\")(d.data.value)} votes ( ${d3.format(\",.2f\")(+d.data.percent)} % )`)\n                .attr('text-anchor', 'middle')\n                .attr('dy', '.6em');\n            })\n            .on(\"mouseout\",function(d) {\n                d3.select(this)\n                    .attr(\"style\", \"stroke: none; cursor: none;\")\n                    .select(\".text-group\").remove();\n                })\n            .append('path')\n            .attr('d', arc)\n            .attr(\"fill\", (d, i) => {\n                return ( votesStats.electionsDate === \"2019-11-10\" )\n                    ? Config.CANDIDATES_2019[d.data.candidateId].color\n                    : Config.CANDIDATES_2019_2[d.data.candidateId].color;\n            })\n            .on(\"mouseover\", function(d) {\n                d3.select(this)     \n                    .attr(\"style\", \"stroke: #00ffff; stroke-width: 2px; fill-opacity: 0.8; cursor: pointer;\");\n                })\n            .on(\"mouseout\", function(d) {\n                d3.select(this)\n                    .attr(\"style\", \"stroke: none; cursor: none;\");\n                })\n            .each( function(d, i) { \n                    this._current = i;\n                    const firstArcSection = /(^.+?)L/;\n                    let newArc = firstArcSection.exec( d3.select(this).attr(\"d\") )[1];\n                    newArc = newArc.replace(/,/g , \" \");\n                    if (d.endAngle > 90 * Math.PI/180) {\n                        const startLoc \t= /M(.*?)A/,\n                            middleLoc \t= /A(.*?)0 0 1/,\n                            endLoc \t\t= /0 0 1 (.*?)$/;\n                        let newStart, middleSec, newEnd;\n                        newEnd = startLoc.exec( newArc )[1];\n                        if (endLoc.exec( newArc )) {\n                            newStart = endLoc.exec( newArc )[1];\n                            middleSec = middleLoc.exec( newArc )[1];\n                            newArc = `M${newStart}A${middleSec}0 0 0${newEnd}`;\n                        } else {\n                            const middleLoc2 = /A(.*?)0 1 1/;\n                            const endLoc2 = /0 1 1 (.*?)$/;\n                            newStart = endLoc2.exec( newArc )[1];\n                            middleSec = middleLoc2.exec( newArc )[1];\n                            newArc = `M${newStart}A${middleSec}1 1 0${newEnd}`;\n                        }\n                    }\n            svg.append(\"path\")\n                .attr(\"class\", \"hiddenDonutArcs\")\n                .attr(\"id\", \"donutArc\"+i)\n                .attr(\"d\", newArc)\n                .style(\"fill\", \"none\");\n            });\n        \n        g.selectAll(\".donutText\")\n            .data(pie(data))\n                .enter()\n                    .append(\"text\")\n                    .attr(\"font-size\", 12 + \"px\")\n                    .attr(\"class\", \"donutText\")\n                    .attr(\"dy\", (d,i) => d.endAngle > 90 * Math.PI/180 ? 18 : -11 )\n                    .append(\"textPath\")\n                    .attr(\"startOffset\",\"50%\")\n                    .style(\"text-anchor\",\"start\")\n                    .attr(\"xlink:href\", (d,i) => `#donutArc${i}`)\n                    .text( d => `${d.data.name} ( ${d3.format(\",.2f\")(+d.data.percent)} % )`  );\n        \n};\n\n/* draw a legend in the form of a circle or of a square, for each of the\n   geographic data layers, based on the number of votes */\nexport const drawAreaLegend = (args) => {\n    // https://bl.ocks.org/HarryStevens/b779b431075d1a2c5710e9b826736650/9060c2bdd4e553ed445dbdc0d3bec43c71ec37da\n\n    const data = args.data,\n        variable = args.variable,\n        legendText = args.legendText,\n        maxAreaSize = args.maxAreaSize,\n        maxData = d3.max(data, d => d.properties.joined[variable]),\n        areaScale = d3.scaleLinear()\n            .range([5, maxAreaSize])\n            .domain([0, maxData]),\n        legendTextLeftPad = 8,\n        legendWidth = maxAreaSize * 3,\n        legendHeight = maxAreaSize * 2 + 10,\n        legend = args.svg.append(\"g\")\n                    .attrs({\n                        transform: d => `translate(${10},${Config.height - 60})`\n                    })\n                    .attr(\"width\", legendWidth)\n                    .attr(\"height\", legendHeight),\n        legendData = [maxData, args.legendData[0], args.legendData[1]],\n        legendArea = (args.typeOfArea === \"circle\")\n            ? legend.selectAll(\".legend-area\")\n                .data(legendData)\n                    .enter().append(\"circle\")\n                        .attr(\"class\", \"legend-area\")\n                        .attr(\"cy\", d => areaScale(d) + 1)\n                        .attr(\"cx\", areaScale(maxData) + 1)\n                        .attr(\"r\", d => areaScale(d))\n            : legend.selectAll(\".legend-area\")\n                .data(legendData)\n                    .enter().append(\"rect\")\n                        .attr(\"class\", \"legend-area\")\n                        .attr(\"cy\", d => areaScale(d) + 1)\n                        .attr(\"cx\", areaScale(maxData) + 1)\n                        .attr(\"width\", d => { return areaScale(d); })\n                        .attr(\"height\", d => { return areaScale(d); }),\n        legendDottedLine = (args.typeOfArea === \"circle\")\n            ? legend.selectAll(\".legend-dotted-line\")\n                .data(legendData)\n                    .enter().append(\"line\")\n                        .attr(\"class\", \"legend-dotted-line\")\n                        .attr(\"x1\", areaScale(maxData) + 1)\n                        .attr(\"x2\", areaScale(maxData) * 2 + legendTextLeftPad)\n                        .attr(\"y1\", d => areaScale(d) * 2 + 1)\n                        .attr(\"y2\", d => areaScale(d) * 2 + 1)\n            : legend.selectAll(\".legend-dotted-line\")\n                .data(legendData)\n                    .enter().append(\"line\")\n                        .attr(\"class\", \"legend-dotted-line\")\n                        .attr(\"x1\", areaScale(maxData) + 1)\n                        .attr(\"x2\", areaScale(maxData) + legendTextLeftPad)\n                        .attr(\"y1\", d => areaScale(d))\n                        .attr(\"y2\", d => areaScale(d)),\n        legendNumber = (args.typeOfArea === \"circle\")\n            ? legend.selectAll(\".legend-number\")\n                .data(legendData)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"legend-number\")\n                        .attr(\"x\", areaScale(maxData) * 2 + legendTextLeftPad)\n                        .attr(\"y\", d => areaScale(d) * 2 + 5)\n                        .text((d, i) => d + (i == legendData.length - 1 ? \" \" + legendText : \"\"))\n            : legend.selectAll(\".legend-number\")\n                .data(legendData)\n                    .enter().append(\"text\")\n                        .attr(\"class\", \"legend-number\")\n                        .attr(\"x\", areaScale(maxData) + legendTextLeftPad)\n                        .attr(\"y\", d => areaScale(d) + 5)\n                        .text((d, i) => d + (i == legendData.length - 1 ? \" \" + legendText : \"\"));\n    \n    return 1;\n\n};\n","import * as Config from './Config.js';\nimport * as Utils from './Utils.js';\nimport { drawAreaLegend } from './DrawLegend.js';\n\n// draw the geographic data maps\nexport const draw = (votesStats, layer, svg) => {\n    const geoData = votesStats.formattedData;\n\n    var geojsonFeatures = topojson.feature(geoData, {\n        type: \"GeometryCollection\",\n        geometries: geoData.objects[layer].geometries\n    });\n    const thisMapPath = d3.geoPath()\n        .projection(\n            Config.projection\n                  .fitSize([Config.width, Config.height], geojsonFeatures));\n\n    const nodes = topojson.feature(geoData, geoData.objects[layer]).features;\n\n    const mapFeatures = svg.append(\"g\")\n        .attr(\"class\", \"features\")\n        .selectAll(\"path\")\n            .data(nodes);\n\n    mapFeatures.enter()\n        .append(\"path\")\n        .attr(\"fill\", d => Utils.colorLayers(d))\n            .attr(\"d\", thisMapPath)\n                .attr(\"class\", d => `CO-${d.properties.joined.code}`)\n                .on(\"mouseover\", d => Utils.highlight(d)) \n                .on(\"mouseout\", d => Utils.unHighlight(d));\n\n    mapFeatures.exit()\n        .each(function (d) {\n            this._xhr.abort();\n        })\n        .remove();\n\n    let dataForLabels = nodes;\n    if (layer === 'counties_cart_hex_10000_wgs84') {\n        const hexDissolved = topojson.feature(geoData, geoData.objects['counties_cart_hex_10000d_wgs84']).features;\n\n        const mapOverlayFeatures = svg.append(\"g\")\n            .attr(\"class\", \"features-overlay\")\n            .selectAll(\"path\")\n                .data(hexDissolved);\n\n        mapOverlayFeatures.enter()\n            .append(\"path\")\n                .attr(\"fill\", \"none\")\n                .attr(\"d\", thisMapPath);\n\n        dataForLabels = hexDissolved;\n    };\n\n    svg.selectAll(\".feature-label\")\n        .data(dataForLabels)\n        .enter().append(\"text\")\n            .attr(\"class\", \"feature-label\" )\n            .attr(\"transform\", d => `translate(${thisMapPath.centroid(d)})`)\n            .attr(\"dy\", \".35em\")\n            .text( d => d.properties.joined.districtAbbr);\n\n    if (layer !== \"counties_wgs84\") {\n        if (layer.match(\"counties_cart_\")) {\n            drawAreaLegend( {\n                \"typeOfArea\": 'circle',\n                \"data\": nodes,\n                \"variable\": \"totValidVotes\",\n                \"maxAreaSize\": 55,\n                \"svg\": svg,\n                \"legendData\": [300000, 100000],\n                \"legendText\": \"Total valid votes\",\n            });\n        } else {\n            drawAreaLegend( {\n                \"typeOfArea\": 'square',\n                \"data\": nodes, \n                \"variable\": \"totValidVotes\",\n                \"maxAreaSize\": 120,\n                \"svg\": svg,\n                \"legendData\": [300000, 100000],\n                \"legendText\": \"Total valid votes\",\n            });\n        }\n    }\n};\n\n// draw the Dorling cartogram based on number of votes from the geographic data\nexport const drawDorling = (votesStats, layer, svg) => {\n    // https://bl.ocks.org/nitaku/49a6bde57d8d8555b6823c8c6d05c5a8/ac5cc21562ba29d015a6375d9a8e854020eede1f\n\n    const geoData = votesStats.formattedData;\n\n    var geojsonFeatures = topojson.feature(geoData, {\n        type: \"GeometryCollection\",\n        geometries: geoData.objects[layer].geometries\n    });\n    const thisMapPath = d3.geoPath()\n        .projection(Config.projection.fitSize([Config.width, Config.height], geojsonFeatures));\n\n    const zoomableLayer = svg.append('g');\n    const radius = d3.scaleSqrt().range([0, 55]);\n\n    const simulation = d3.forceSimulation()\n        .force('collision', d3.forceCollide( d => {\n        return d.r + 0.35;\n    })).force('attract', d3.forceAttract().target( d => {\n        return [d.foc_x, d.foc_y];\n    }));\n\n    const contents = zoomableLayer.append('g');\n\n    const getGeo = () => {\n        const land = topojson.merge(geoData, geoData.objects.counties_wgs84.geometries);\n        contents.append('path').attrs({ \"class\": 'land', d: thisMapPath(land) });\n\n        const nodes = topojson.feature(geoData, geoData.objects[layer]).features;\n        nodes.forEach( d => {\n            if (d.geometry.type === 'Polygon') {\n                return d.main = d;\n            } else if (d.geometry.type === 'MultiPolygon') {\n                const subpolys = [];\n                d.geometry.coordinates.forEach( p => {\n                    const sp = {};\n                    sp = {\n                        coordinates: p,\n                        properties: d.properties,\n                        type: 'Polygon'\n                    };\n                    sp.area = d3.geoArea(sp);\n                    return subpolys.push(sp);\n                });\n                return d.main = subpolys.reduce(( (a, b) => {\n                    return (a.area > b.area) ? a : b;\n                }), subpolys[0]);\n            }\n        });\n\n        const getBubbles = () => {\n            const populationData = [];\n            nodes.forEach( d => {\n                return populationData.push({\n                    parent: 'romania',\n                    country: d,\n                    properties: d.properties,\n                    totValidVotes: +d.properties.joined.totValidVotes,\n                });\n            });\n\n            radius.domain([ 0, d3.max(populationData, d => d.totValidVotes) ]);\n            populationData.forEach( d => { \n                return d.r = radius(d.totValidVotes); \n            });\n            populationData.forEach( d => {\n                d.centroid = Config.projection(d3.geoCentroid(d.country.main));\n                d.x = d.centroid[0];\n                d.y = d.centroid[1];\n                d.foc_x = d.centroid[0];\n                return d.foc_y = d.centroid[1];\n            });\n\n            const bubbles = zoomableLayer.selectAll('.bubble')\n                .data(populationData);\n            const enBubbles = bubbles.enter()\n                .append('circle')\n                .attrs({\n                    \"class\": d => `bubble CO-${d.properties.joined.code}`,\n                    r: d => d.r,\n                    fill: d => Utils.colorLayers(d) })\n                .on(\"mouseover\", d => Utils.highlight(d)) \n                .on(\"mouseout\", d => Utils.unHighlight(d));\n\n            const labels = zoomableLayer.selectAll('.feature-label')\n                .data(populationData);\n            const enLabels = labels.enter()\n                .append('g')\n                .attrs({ \"class\": 'feature-label' });\n            enLabels.append('text')\n                .text( d => d.properties.joined.districtAbbr)\n                .attrs({ dy: '0.35em' });\n\n            simulation.nodes(populationData).stop();\n\n            let j = 0;\n            for (let i = j = 0, ref = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                simulation.tick();\n            }\n\n            enBubbles.attrs({\n                transform: d => `translate(${d.x},${d.y})`\n            });\n            return enLabels.attrs({\n                transform: d => `translate(${d.x},${d.y})`\n            });\n\n        };\n\n        drawAreaLegend( {\n            \"typeOfArea\": 'circle',\n            \"data\": nodes,\n            \"variable\": \"totValidVotes\", \n            \"maxAreaSize\": 55,\n            \"svg\": svg,\n            \"legendData\": [300000, 100000],\n            \"legendText\": \"Total valid votes\",\n        });\n\n        return getBubbles();\n    };\n\n    getGeo();\n    \n};\n\n// draw the Demers cartogram based on number of votes from the geographic data\nexport const drawDemers = (votesStats, layer, svg) => {\n    // https://bl.ocks.org/martgnz/34880f7320eb5a6745e2ed7de7914223\n\n    const geoData = votesStats.formattedData;\n\n    var geojsonFeatures = topojson.feature(geoData, {\n        type: \"GeometryCollection\",\n        geometries: geoData.objects[layer].geometries\n    });\n    const thisMapPath = d3.geoPath()\n        .projection(Config.projection.fitSize([Config.width, Config.height], geojsonFeatures));\n\n    const padding = 3;\n    const land = topojson.merge(geoData, geoData.objects.counties_wgs84.geometries);\n    svg.append('path').attrs({ \"class\": 'land', d: thisMapPath(land) });\n\n    const nodes = topojson.feature(geoData, geoData.objects[layer]).features;\n    const font = d3.scaleLinear()\n        .range([6, 20])\n        .domain(d3.extent(nodes, d => d.properties.joined.totValidVotes));\n    const size = d3.scaleSqrt()\n        .range([5, 120])\n        .domain(d3.extent(nodes, d => d.properties.joined.totValidVotes));\n\n    nodes.forEach( d => {\n        d.pos = thisMapPath.centroid(d);\n        d.area = size(d.properties.joined.totValidVotes);\n        [d.x, d.y] = d.pos;\n    });\n\n    const collide = () => {\n        for (let k = 0, iterations = 4, strength = 0.5; k < iterations; ++k) {\n            for (let i = 0, n = nodes.length; i < n; ++i) {\n                for (let a = nodes[i], j = i + 1; j < n; ++j) {\n                    let b = nodes[j],\n                        x = a.x + a.vx - b.x - b.vx,\n                        y = a.y + a.vy - b.y - b.vy,\n                        lx = Math.abs(x),\n                        ly = Math.abs(y),\n                        r = a.area / 2 + b.area / 2 + padding;\n                    if (lx < r && ly < r) {\n                        if (lx > ly) {\n                            lx = (lx - r) * (x < 0 ? -strength : strength);\n                            (a.vx -= lx), (b.vx += lx);\n                        } else {\n                            ly = (ly - r) * (y < 0 ? -strength : strength);\n                            (a.vy -= ly), (b.vy += ly);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    const simulation = d3.forceSimulation(nodes)\n        .force('x', d3.forceX(d => d.x).strength(0.1))\n        .force('y', d3.forceY(d => d.y).strength(0.1))\n        .force('collide', collide);\n    for (let i = 0; i < 120; ++i) simulation.tick();\n\n    const rect = svg\n        .selectAll('g')\n        .data(nodes)\n        .enter()\n            .append('g')\n            .attr('transform', d => `translate(${d.x}, ${d.y})`);\n    rect\n        .append('rect')\n        .attr(\"class\", d => `bubble CO-${d.properties.joined.code}`)\n        .attr('width', d => d.area)\n        .attr('height', d => d.area)\n        .attr('x', d => -d.area / 2)\n        .attr('y', d => -d.area / 2)\n        .attr('fill', d => Utils.colorLayers(d))\n        .attr('rx', 2)\n            .on(\"mouseover\", d => Utils.highlight(d)) \n            .on(\"mouseout\", d => Utils.unHighlight(d));\n    rect\n        .append('text')\n        .attr(\"class\", \"feature-label\" )\n        .filter(d => d.area > 18)\n        .style('font-family', 'sans-serif')\n        .style('font-size', d => `${font(d.properties.joined.totValidVotes)}px`)\n        .attr('text-anchor', 'middle')\n        .attr('dy', 2)\n        .text(d => d.properties.joined.districtAbbr);\n\n    const node = svg.selectAll(\"rect\")\n        .data(nodes)\n        .enter().append(\"rect\")\n        .attr(\"width\", d => { return d.r * 2; })\n        .attr(\"height\", d => { return d.r * 2; });\n\n    const tick = (e) => {\n        node.attr(\"x\", d => { return d.x - d.r; })\n            .attr(\"y\", d => { return d.y - d.r; });\n    };\n\n    drawAreaLegend( {\n        \"typeOfArea\": 'square',\n        \"data\": nodes,\n        \"variable\": \"totValidVotes\",\n        \"maxAreaSize\": 120,\n        \"svg\": svg,\n        \"legendData\": [300000, 100000],\n        \"legendText\": \"Total valid votes\",\n    });\n};\n\n// draw the Non-Contiguous cartogram based on number of votes from the geographic data\nexport const drawNonCont = (votesStats, layer, svg) => {\n    // https://strongriley.github.io/d3/ex/cartogram.html\n\n    const geoData = votesStats.formattedData;\n    var geojsonFeatures = topojson.feature(geoData, {\n        type: \"GeometryCollection\",\n        geometries: geoData.objects[layer].geometries\n    });\n    const thisMapPath = d3.geoPath()\n        .projection(Config.projection.fitSize([Config.width, Config.height], geojsonFeatures));\n\n    const nodes = topojson.feature(geoData, geoData.objects[layer]).features;\n    nodes.forEach( d => {\n        d.properties.joined.totalValidVotesScale = Math.sqrt(d.properties.joined.totValidVotes / 300000);\n        d.properties.joined.totValidVotes_rate = Math.ceil( d.properties.joined.totValidVotes / d.properties.joined.totalValidVotesScale ) || 0;\n    });\n\n    svg.append(\"g\")\n        .attr(\"class\", \"black\")\n        .selectAll(\"path\")\n            .data(nodes)\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", thisMapPath);\n    svg.append(\"g\")\n        .attr(\"class\", \"land\")\n        .selectAll(\"path\")\n            .data(nodes)\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", thisMapPath);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"white\")\n        .selectAll(\"path\")\n            .data(nodes)\n            .enter()\n            .append(\"path\")\n            .attr(\"fill\", d => Utils.colorLayers(d))\n            .attr(\"transform\", d => {\n                const centroid = thisMapPath.centroid(d),\n                    x = centroid[0],\n                    y = centroid[1];\n                return `translate(${x},${y})`\n                    + `scale(${d.properties.joined.totalValidVotesScale || 0.6})`\n                    + `translate(${-x},${-y})`;\n            })\n            .attr(\"d\", thisMapPath)\n            .attr(\"class\", d => `CO-${d.properties.joined.code}` )\n                .on(\"mouseover\", d => Utils.highlight(d)) \n                .on(\"mouseout\", d => Utils.unHighlight(d));\n\n    const labels = svg.selectAll(\".feature-label\")\n        .data(nodes)\n        .enter().append(\"text\")\n            .attr(\"class\", \"feature-label\" )\n            .attr(\"transform\", d => `translate(${thisMapPath.centroid(d)})`)\n            .attr(\"dy\", \".35em\")\n            .text( d => d.properties.joined.districtAbbr);\n\n        drawAreaLegend( {\n            \"typeOfArea\": 'square',\n            \"data\": nodes,\n            \"variable\": \"totValidVotes_rate\",\n            \"maxAreaSize\": 120,\n            \"svg\": svg,\n            \"legendData\": [300000, 100000],\n            \"legendText\": \"Total valid votes\",\n        });\n\n};\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    return definition[2] && fn\n        ? $$scope.dirty | definition[2](fn(dirty))\n        : $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        $$.fragment && $$.fragment.p($$.ctx, $$.dirty);\n        $$.dirty = [-1];\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n\texport let name;\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\n</style>\n\n<!-- <h1>Hello {name}!</h1> -->\n","import * as Utils from './Utils.js'\nimport mapDataFactory from './MapFactory.js'\nimport * as DrawLegend from './DrawLegend.js'\nimport * as DrawMaps from './DrawMaps.js'\n\nimport App from './App.svelte';\n\nconst app = new App({\n    target: document.body,\n    props: {\n        name: 'World',\n    },\n});\n\nexport default app;\n\n(() => {\n    // const mapArea = d3.select(\"#chart\").append('map-area');\n\n    let geographicData, electionsData2019Round1, electionsData2019Round2;\n    let electionsDate = \"2019-11-24\";\n\n    // options for loading spinner\n    let opts = {\n        lines: 9,\n        length: 4,\n        width: 5,\n        radius: 12,\n        scale: 1,\n        corners: 1,\n        color: '#f40000',\n        opacity: 0.25,\n        rotate: 0,\n        direction: 1,\n        speed: 1,\n        trail: 30,\n        fps: 20,\n        zIndex: 2e9,\n        className: 'spinner',\n        shadow: false,\n        hwaccel: false,\n        position: 'absolute',\n       },\n        target = document.getElementById('spinner'),\n        spinner;\n\n    // show spinner when changing view from round 1 to 2 and vice versa\n    d3.select(\"#rounds-btn\")\n        .on(\"click\", function(){\n            spinner = new Spinner(opts).spin(target);\n            var button = d3.select(this);\n            if (button.text() === \"See Round 1\"){\n                changeView(electionsData2019Round1, '2019-11-10');\n                button.text(\"See Round 2\");\n            }\n            else {\n                changeView(electionsData2019Round2, '2019-11-24');\n                button.text(\"See Round 1\");\n            };\n            setTimeout(function() {\n                spinner.stop();\n            }, 1000);\n        })\n\n    /* initiate getting the geographic data in json form\n      initiate getting the csv data for both elections rounds,\n      local (RO) and abroad (SR) */\n    const promises = [\n        d3.json(\"data/counties_bundle.json\"),\n        d3.csv(\"data/round1/pv_RO_PRSD_FINAL.csv\"),\n        d3.csv(\"data/round1/pv_SR_PRSD_FINAL.csv\"),\n        d3.csv(\"data/round1/pv_SR_PRSD-C_FINAL.csv\"),\n        d3.csv(\"data/round2/pv_RO_PRSD_FINAL.csv\"),\n        d3.csv(\"data/round2/pv_SR_PRSD_FINAL.csv\"),\n        d3.csv(\"data/round2/pv_SR_PRSD-C_FINAL.csv\"),\n    ]\n\n    /* when data loads, remap fields for abroad data to match local data,\n       then merge them for each round; use changeView to set the initial focus\n       on the results from round 2 */\n    Promise.all(promises).then( data => {\n        geographicData = data[0];\n        let electionsData2019RORound1 = data[1],\n              electionsData2019SRRound1 = data[2],\n              electionsData2019SRCRound1 = data[3],\n              electionsData2019RORound2 = data[4],\n              electionsData2019SRRound2 = data[5],\n              electionsData2019SRCRound2 = data[6];\n\n        electionsData2019SRCRound1 = Utils.reMapFields(electionsData2019SRCRound1);\n        electionsData2019SRCRound2 = Utils.reMapFields(electionsData2019SRCRound2);\n\n        electionsData2019Round1 = [...electionsData2019RORound1, ...electionsData2019SRRound1, ...electionsData2019SRCRound1];\n        electionsData2019Round2 = [...electionsData2019RORound2, ...electionsData2019SRRound2, ...electionsData2019SRCRound2];\n\n        changeView(electionsData2019Round2, electionsDate);\n    }).catch( \n        error => console.log(error)\n    );\n\n    // switch the focus on results from round 1 to round 2 and vice versa\n    const changeView = (electionsData, electionsDate) => {\n\n        /* call the function that takes as input the geographic and elections\n           data and date, formats the data, then draw the legend, maps and\n           charts using the same shared data: formattedData, votesByCounties,\n           votesByCandidates, electionsDate */\n        const mapVehicle = mapDataFactory(geographicData, electionsData, electionsDate);\n\n        // completely swipe out the previous view\n        const svgs = Utils.repaint();\n        let svg1, svg2, svg3, svg4, svg5, svg6, svg7, svg8, svg9, svg10;\n        [svg1, svg2, svg3, svg4, svg5, svg6, svg7, svg8, svg9, svg10] = [...svgs];\n\n        /* call the function with a function as parameter and pass the data\n           in the vehicle, for sharing and reuse */\n\n        // legend based on the percentage of votes per the final candidates\n        mapVehicle(DrawLegend.drawVotesPercentageLegend, 'counties_wgs84', svg1);\n        // legend based on the number of votes per county\n        mapVehicle(DrawLegend.drawVotesByPopulationLegend, 'counties_wgs84', svg2);\n\n        // map for the counties with county id ~ district id data\n        mapVehicle(DrawMaps.draw, 'counties_wgs84', svg3);\n        // map for the counties as cartogram\n        mapVehicle(DrawMaps.draw, 'counties_cart_wgs84', svg4);\n        /* map for the counties as hexagons from the cartogram\n        and overlay the outline of counties from a dissolved hexagons layer */\n        mapVehicle(DrawMaps.draw, 'counties_cart_hex_10000_wgs84', svg5);\n\n        // mapDorling cartogram based on number of votes from the geographic data\n        mapVehicle(DrawMaps.drawDorling, 'counties_wgs84', svg6);\n        // mapDemers cartogram based on number of votes from the geographic data\n        mapVehicle(DrawMaps.drawDemers, 'counties_wgs84', svg7);\n        // mapNon-Contiguous cartogram based on number of votes from the geographic data\n        mapVehicle(DrawMaps.drawNonCont, 'counties_wgs84', svg8);\n\n        // scalebar in miles and km, use geographic data to set extent\n        mapVehicle(DrawLegend.drawScaleBar, 'counties_wgs84', svg3);\n        // donut from the percentage of all candidates\n        mapVehicle(DrawLegend.drawCandidatesDonut, 'counties_wgs84', svg9);\n        // treemap from the total votes per county\n        mapVehicle(DrawLegend.drawCountiesTreemap, 'counties_wgs84', svg10);\n\n    };\n\n}).call(this);"],"names":["CANDIDATES_2019","g1","name","color","g2","g3","g4","g5","g6","g7","g8","g9","g10","g11","g12","g13","g14","CANDIDATES_2019_2","CANDIDATES_2014","LAYERLIST","colorScaleRed","d3","scaleThreshold","domain","range","schemeReds","colorScaleBlue","schemeBlues","colorScaleRed2","scaleQuantize","colorScaleBlue2","projection","geoAlbers","center","rotate","parallels","scale","path","geoPath","roundToNearestMultipleOf","m","n","Math","ceil","round","pair","array","slice","map","b","i","colorLayers","d","properties","joined","rate1","rate2","electionsDate","Config.colorScaleRed","Config.colorScaleRed2","Config.colorScaleBlue","Config.colorScaleBlue2","tooltip_div","select","append","attr","style","highlight","transition","duration","html","tooltipHTML","event","pageY","selectAll","code","candidate2","format","candidate1","electoralDistrict","totValidVotes","toLocaleString","cod_birou","vvot_sqkm","unHighlight","reMapFields","data","forEach","c","d1","e1","e2","e3","e4","e5","e6","e7","e8","e9","e10","e11","e12","e13","e14","groupElectoralDataByDistrict","electoralDataByDistrict","fieldMap","2014","2019-11-10","2019-11-24","vote1","vote2","rate1Color","rate2Color","Config.fieldMap","set","mapDataFactory","electionsData","votesByCounties","resultByCounty","reduce","res","data_row","columns","district_code","Cod birou electoral","Județ","col","push","Number","Stats.groupvotesByCounties","votesByCandidates","resultByCandidates","result","total","Object","keys","v","a","candidateId","candidateName","Config.CANDIDATES_2019","Config.CANDIDATES_2019_2","totCountry","k","totalCountry","rateCountry","toFixed","Stats.groupVotesByCandidates","votesStats","formattedData","Stats.groupElectoralDataByDistrict","Config.LAYERLIST","layer","objects","geometries","filter","get","districtAbbr","totValidVotes_rate","abbr","area_sqkm","error","console","log","formatCountyData","callback","svg","drawScaleBar","topojson","feature","type","g","Config.projection","miles","geoScaleBar","units","left","scaleBarMiles","kilometers","distance","scaleBarKilometers","redraw","fitSize","call","window","onresize","_","drawVotesPercentageLegend","layerData","features","values","minRate1","maxRate1","minRate2","maxRate2","x","scaleLinear","rangeRound","x1","Utils.pair","ticks","enter","xAxisCall","axisBottom","tickSize","xAxisCall1","candidate1Text","candidate2Text","totalCandidate1Text","totalCandidate2Text","totalCountryText","text","drawVotesByPopulationLegend","sort","margin","max","y","scaleBand","padding","axisTop","yAxisCall","axisLeft","bar","bandwidth","Utils.colorLayers","Config.path","on","Utils.highlight","Utils.unHighlight","drawCountiesTreemap","nodes","counties_wgs84","populationData","value","children","root","treemap","tile","treemapResquarify","size","hierarchy","eachBefore","id","parent","sum","leaf","leaves","join","x0","y0","depth","y1","Utils.tooltip_div","ancestors","reverse","split","concat","length","drawCandidatesDonut","radius","min","percent","pie","arc","outerRadius","innerRadius","this","remove","each","_current","newArc","exec","replace","endAngle","PI","middleLoc","endLoc","newStart","middleSec","newEnd","middleLoc2","drawAreaLegend","args","variable","legendText","maxAreaSize","maxData","areaScale","legendWidth","legendHeight","legend","attrs","transform","legendData","typeOfArea","draw","geoData","geojsonFeatures","thisMapPath","mapFeatures","exit","_xhr","abort","dataForLabels","hexDissolved","centroid","match","drawDorling","zoomableLayer","scaleSqrt","simulation","forceSimulation","force","forceCollide","r","forceAttract","target","foc_x","foc_y","contents","land","merge","class","geometry","main","subpolys","coordinates","p","sp","area","geoArea","country","geoCentroid","enBubbles","fill","enLabels","dy","stop","j","ref","alphaMin","alphaDecay","tick","getBubbles","getGeo","drawDemers","font","extent","pos","forceX","strength","forceY","iterations","vx","vy","lx","abs","ly","rect","drawNonCont","totalValidVotesScale","sqrt","noop","run","fn","blank_object","create","run_all","fns","is_function","thing","safe_not_equal","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","$$","pop","has","add","fragment","before_update","ctx","dirty","after_update","outroing","make_dirty","then","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_mount","on_destroy","context","Map","callbacks","ready","block","local","element","ret","hydrate","l","Array","from","childNodes","intro","delete","anchor","new_on_destroy","mount_component","app","[object Object]","detaching","destroy_component","$destroy","index","indexOf","splice","document","body","geographicData","electionsData2019Round1","electionsData2019Round2","spinner","opts","lines","width","corners","opacity","direction","speed","trail","fps","zIndex","className","shadow","hwaccel","position","getElementById","Spinner","spin","button","changeView","setTimeout","promises","json","csv","all","electionsData2019RORound1","electionsData2019SRRound1","electionsData2019SRCRound1","electionsData2019RORound2","electionsData2019SRRound2","electionsData2019SRCRound2","Utils.reMapFields","catch","mapVehicle","svgs","svg1","svg2","svg3","svg4","svg5","svg6","svg7","svg8","svg9","svg10","DrawLegend.drawVotesPercentageLegend","DrawLegend.drawVotesByPopulationLegend","DrawMaps.draw","DrawMaps.drawDorling","DrawMaps.drawDemers","DrawMaps.drawNonCont","DrawLegend.drawScaleBar","DrawLegend.drawCandidatesDonut","DrawLegend.drawCountiesTreemap"],"mappings":"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"}